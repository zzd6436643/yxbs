package org.jzw.yxbs.controller;import java.util.HashMap;import java.util.List;import java.util.Map;import javax.annotation.Resource;import org.apache.log4j.Logger;import org.jzw.yxbs.condition.MessageCondition;import org.jzw.yxbs.condition.ReplyCondition;import org.jzw.yxbs.condition.TopicCondition;import org.jzw.yxbs.domain.Message;import org.jzw.yxbs.domain.Reply;import org.jzw.yxbs.domain.Section;import org.jzw.yxbs.domain.Topic;import org.jzw.yxbs.service.BBSMessageService;import org.jzw.yxbs.service.BBSReplyService;import org.jzw.yxbs.service.BBSSectionService;import org.jzw.yxbs.service.BBSTopicService;import org.jzw.yxbs.utils.PaginationUtil;import org.jzw.yxbs.utils.UserInfoUtil;import org.springframework.stereotype.Controller;import org.springframework.ui.ModelMap;import org.springframework.web.bind.annotation.RequestMapping;import org.springframework.web.servlet.ModelAndView;@Controller@RequestMapping("/bbs")public class BbsController {		private static Logger logger = Logger.getLogger(BbsController.class);	@Resource	private BBSSectionService bbssectionService;		@Resource	private BBSTopicService bbstopicService;		@Resource	private BBSMessageService bbsMessageService;		@Resource	private BBSReplyService bbsReplyService;		@RequestMapping(value = "index")	public ModelAndView bbs() {		ModelMap modelMap = new ModelMap();		List<Section> listSections = bbssectionService.findAllSection();		modelMap.addAttribute("listSections", listSections);		Map<Integer, List<Topic>> mapTopic = new HashMap<Integer, List<Topic>>();		for (int i=0; i<listSections.size(); i++)		{			Section section = listSections.get(i);			TopicCondition tc = new TopicCondition();			tc.setSectionID(section.getSid());			List<Topic> listTopics = bbstopicService.findTopics(tc);			mapTopic.put(section.getSid(), listTopics);		}		modelMap.addAttribute("mapTopic", mapTopic);		return new ModelAndView("bbs/index", modelMap);	}		@RequestMapping(value="topic")	public ModelAndView topic(TopicCondition tc)	{		ModelMap modelMap = new ModelMap();		List<Topic> listTopics = bbstopicService.findTopics(tc);		if (listTopics.size() > 0)		{			Topic topic = listTopics.get(0);			modelMap.addAttribute("topic", topic);			MessageCondition mc = new MessageCondition();			mc.setTid(tc.getTid());			mc.setPageIndex(tc.getPageIndex());			mc.setPageSize(30);			Integer msgCount = bbsMessageService.selectCount(mc);			List<Message> listMsgs = bbsMessageService.selectMessages(mc);			modelMap.addAttribute("listMessage", listMsgs);			modelMap.addAttribute("currentPage", PaginationUtil.getCurrentPage(mc.getPageIndex(), mc.getPageSize(), msgCount));			modelMap.addAttribute("totalPage", PaginationUtil.getTotalPage(mc.getPageIndex(), mc.getPageSize(), msgCount));			modelMap.addAttribute("messageCount", msgCount);		}		return new ModelAndView("bbs/topic", modelMap);	}		@RequestMapping(value="newMsg")	public ModelAndView newMsg(TopicCondition tc)	{		ModelMap modelMap = new ModelMap();		List<Topic> topics = bbstopicService.findTopics(tc);		if (topics.size() > 0)		{			modelMap.addAttribute("topic", topics.get(0));		}		return new ModelAndView("bbs/newMsg", modelMap);	}		@RequestMapping(value="cmtMsg")	public ModelAndView insertMsg(Message m)	{		ModelMap modelMap = new ModelMap();		String username = UserInfoUtil.getUserName();		m.setUsername(username);		bbsMessageService.insert(m);		modelMap.addAttribute("flag", true);		modelMap.addAttribute("tid", m.getTid());		modelMap.addAttribute("desc", "发贴成功, 请等待版本审核");		return new ModelAndView("bbs/cmtMsg", modelMap);	}		@RequestMapping(value="message")	public ModelAndView messageShow(ReplyCondition rc)	{		ModelMap modelMap = new ModelMap();		MessageCondition mc = new MessageCondition();		mc.setMid(rc.getMid());		List<Message> listMsg = bbsMessageService.selectMessages(mc);		if (listMsg.size() > 0)		{			modelMap.addAttribute("message", listMsg.get(0));			TopicCondition tc = new TopicCondition();			tc.setTid(listMsg.get(0).getTid());			List<Topic> listTopics = bbstopicService.findTopics(tc);			if (listTopics.size() > 0)			{				logger.debug("topic's size is " + listTopics.size());				modelMap.addAttribute("topic", listTopics.get(0));			}			Integer replyCount = bbsReplyService.selectReplyCount(rc);			modelMap.addAttribute("replyCount", replyCount);			modelMap.addAttribute("currentPage", PaginationUtil.getCurrentPage(rc.getPageIndex(), rc.getPageSize(), replyCount));			modelMap.addAttribute("totalPage", PaginationUtil.getTotalPage(rc.getPageIndex(), rc.getPageSize(), replyCount));			List<Reply> listReply = bbsReplyService.selectReply(rc);			modelMap.addAttribute("replyList", listReply);		}		return new ModelAndView("bbs/message", modelMap);	}		@RequestMapping(value="cmtReply")	public ModelAndView insertReply(ReplyCondition rc)	{		ModelMap modelMap = new ModelMap();		String username = UserInfoUtil.getUserName();		rc.setUsername(username);		bbsReplyService.insertReply(rc);		modelMap.addAttribute("flag", true);		modelMap.addAttribute("mid", rc.getMid());		modelMap.addAttribute("desc", "发贴成功, 请等待版本审核");		return new ModelAndView("bbs/cmtReply", modelMap);	}}